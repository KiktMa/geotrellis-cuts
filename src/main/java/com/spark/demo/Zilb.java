package com.spark.demo;

import java.util.zip.DataFormatException;
import java.util.zip.Inflater;

public class Zilb {
    public static void main(String[] args) throws DataFormatException {
        String compressedData = "x\\x9C\\xED\\xC1\\xB1\\x11\\x00 \\x08\\x04\\xB0?*\\x0B\\x86`TF\\xD7\\xDA\\x19\\x92T\\xD2{\\xDE\\x9D\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00|*\\x17\\x94\\xB7\\x02A";
        String decompressedData = decompress(compressedData);
        System.out.println("Decompressed data: " + decompressedData);
    }

    public static String decompress(String compressedData) throws DataFormatException {
        // 将压缩后的字符串转换为字节数组
        byte[] compressedBytes = compressedData.getBytes();
        // 创建一个解压缩对象Zilb
        Inflater inflater = new Inflater();
        // 设置解压缩对象的输入
        inflater.setInput(compressedBytes);
        // 创建一个缓冲区来存储解压缩后的数据
        byte[] decompressedBytes = new byte[1024];
        // 解压缩数据
        int decompressedLength = inflater.inflate(decompressedBytes);
        // 完成解压缩操作
        inflater.end();
        // 将解压缩后的字节数组转换为字符串并返回
        return new String(decompressedBytes, 0, decompressedLength);
    }
}
